name: "Publish Releases: PyPi / GitHub"

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  SKIP_BUILD: false
  GITHUB_TOKEN: ${{ secrets.GH_AUTH_TOKEN }}
  PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:

    # Checkout Repo
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Setup Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    # Install Poetry
    - name: Install Poetry
      run: |
        python -m pip install pipx
        pipx ensurepath
        pipx install poetry

    # Cache Poetry
    - name: Setup Poetry Cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    # Install dependencies
    - name: Install Deps
      run: poetry install

    # Publish to PyPi
    - name: Publish to PyPI
      run: |
        poetry config pypi-token.pypi $PYPI_TOKEN
        poetry publish --build

    # Get Version Tag
    - name: Get Version
      id: latest_version
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

    # Generate GitHub Release
    - name: Create Release
      run: gh release create ${{ steps.latest_version.outputs.tag }} --generate-notes
